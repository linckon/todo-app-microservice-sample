version: '3.9'

services:
  api-server:
    container_name: "api-server"
    build: ./api-server/.
    environment:
      - PORT=5001
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - '5001:5001'
    depends_on:
      - db
      - redis
      - worker-server

  worker-server:
    container_name: "worker-server"
    build: ./worker-server/.
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db
      - redis

  db:
    container_name: "mysql-db"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE:  ${MYSQL_DATABASE}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - ./db-data:/var/lib/mysql

  redis:
    container_name: "redis-service"
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./redis-data:/data

volumes:
  db-data:
  redis-data:
